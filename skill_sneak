#include <stdio.h>
#include <stdlib.h>
#include <strings.h>
#include <string.h>
#include <stdio_ext.h>
#include <math.h>

/*
 //===================================================
typedef struct {
    char nome[50], sobrenome[50];
    int numero;
    char sigla[10];
    int votos;
}Candidato;

int main() {

    Candidato n[8];
    for (int k = 0; k < 8; k++) {
        n[k].numero=0;
        n[k].votos=0;
    }

    int opc=0;
    int v=0;
    int cont=0;
    int corno=0;
    FILE *arq;

    arq = fopen("/home/scrim/Downloads/Lista de Exercícios 3-20191203/candidatos.txt", "r");

    for (int i = 0; i < 8; i++) {
        fscanf(arq, "%s %s", n[i].nome, n[i].sobrenome);
        fscanf(arq, "%i", &n[i].numero);
        fscanf(arq, "%s", n[i].sigla);
}

    fclose(arq);
    printf("CANDIDATOS: \n");

    for (int j = 0; j < 8; j++) {
        printf("%s %s \n", n[j].nome, n[j].sobrenome);
        printf("%d \n", n[j].numero);
        printf("%s \n", n[j].sigla);
        printf("================ \n");
    }

    printf("Dgite umas das opções: \n");
        FILE *arq2;
        arq2 = fopen("elecoes.txt", "w+");

    do {

        printf("1 Para votar \n");
        printf("2 Para sair \n");
        scanf("%i", &opc);

        double nu=-99999;
        int maior=0;

        switch (opc) {
            case 1:

                corno=0;
                printf("Digite o numero do condidato: \n");
                scanf("%i", &v);
                    for (int i = 0; i < 8; i++) {
                        if (v == n[i].numero) {
                            cont = 0;
                            cont++;
                            n[i].votos = n[i].votos + cont;
                            printf("Sucesso! \n");
                            corno++;
                        }
                    }
                    if(corno<1)
                    {
                        printf("vc é burro cara?\n ");
                    }

                    break;
                    case 2:

                        for (int j = 0; j < 8; j++) {
                          fprintf(arq2, "Candidato %s votos: \n", n[j].nome);
                          fprintf(arq2, "%d \n", n[j].votos);
                        }

                for (int k = 0; k < 8; k++) {
                    for (int i = 0; i < 8; i++) {
                    if (n[k].votos > n[i+1].votos) {
                        fprintf(arq2, "\n");
                        fprintf(arq2, "O ganhador %s com %i votos \n", n[k].nome, n[k].votos);
                        if (n[k].votos == n[k+1].votos);
                        fprintf(arq2, "Empate entre %s e %s \n", n[k].nome, n[k+1].nome);
                    }
                }}
                        fclose(arq2);
                        exit(0);
                    default:
                        printf("Digito invalido \n");
                    break;
                }

    }while (opc != 2);

    return 0;
}
*/
/*
//===================================================
int main(){
    char uni1[10000];
    char uni2[10000];
    char a[]="97", espa[]="32", z[]="122", A[]="65", Z[]="90", ponto[]="46", vir[]="44";

    FILE *arq;
    FILE *arq2;
    FILE *arq3;
    arq = fopen("/home/scrim/Downloads/Lista de Exercícios 3-20191203/texto1.txt", "r");
    arq2 = fopen("/home/scrim/Downloads/Lista de Exercícios 3-20191203/texto2.txt", "r");
    arq3 = fopen("texto3.txt", "w+");

    int cont=0;
    while ((uni1[cont] = fgetc(arq)) != EOF){
        cont = cont + 1;
    }

    int cont2=0;
    while ((uni2[cont2] = fgetc(arq2)) != EOF){
        cont2 = cont2 + 1;
    }

    printf("%s\n", uni1);
    printf("%s\n", uni2);

    int i=0;
    while (fputc(uni1[i], arq3) != EOF) {
        if (uni1[i] == 'a'){
            for (int j = 0; j < 2; ++j) {
                uni1[i] = a[j];
                fputc(uni1[i], arq3);
            }
        }
        if (uni1[i] == '\t'){
            uni1[i] = espa[];
            fputc(uni1[i], arq3);
        }
        if (uni1[i] == 'z'){
            uni1[i] = z;
            fputc(uni1[i], arq3);
        }
        if (uni1[i] == 'A'){
            uni1[i] = A;
            fputc(uni1[i], arq3);
        }
        if (uni1[i] == 'Z'){
            uni1[i] = Z;
            fputc(uni1[i], arq3);
        }
        if (uni1[i] == '.'){
            uni1[i] = ponto;
            fputc(uni1[i], arq3);
        }
        if (uni1[i] == ','){
            uni1[i] = vir;
            fputc(uni1[i], arq3);
        }
        i = i + 1;
    }

    i=0;
    while (fputc(uni2[i], arq3) != EOF) {
        if (uni2[i] == 'a'){
            uni2[i] = a;
            fputc(uni1[i], arq3);
        }
        if (uni2[i] == '\t'){
            uni2[i] = espa;
            fputc(uni1[i], arq3);
        }
        if (uni2[i] == 'z'){
            uni2[i] = z;
            fputc(uni1[i], arq3);
        }
        if (uni2[i] == 'A'){
            uni2[i] = A;
            fputc(uni1[i], arq3);
        }
        if (uni2[i] == 'Z'){
            uni2[i] = Z;
            fputc(uni1[i], arq3);
        }
        if (uni2[i] == '.'){
            uni2[i] = ponto;
            fputc(uni1[i], arq3);
        }
        if (uni2[i] == ','){
            uni2[i] = vir;
            fputc(uni1[i], arq3);
        }
        i = i + 1;
    }

    printf("%s\n", uni1);
    printf("%s\n", uni2);

    return 0;
}
 */
/*
 //===================================================
 target_link_libraries(<> m)
typedef struct {
    float x, y;
}Ponto;

void distancia(float x1, float y1, float x2, float y2, float *d){
    *d = sqrt(pow((x1-x2), 2)+pow((y1-y2), 2));
}

int main(){

    Ponto a[2];
    float d=0;

    for (int i = 0; i < 2; ++i) {
        printf("Digite dois numeros:\n");
        scanf("%f", &a[i].x);
        scanf("%f", &a[i].y);
        printf("\n");
        printf("%f\t", a[i].x);
        printf("%f\t", a[i].y);
    }
    distancia(a[1].x, a[1].y, a[2].x, a[2].y, &d);
    printf("A distancia entre os pontos: %f \n", d);

    return 0;
}
 */
/*
 //===================================================
int main(){

    char str1[1000];
    char c;
    int i=0;
    FILE *arq;
    arq = fopen("/home/scrim/Downloads/Lista de Exercícios 3-20191203/exe6.txt", "r");
    if(arq == NULL){
        printf("Erro ao abrir o arquivo. \n");
        exit(1);
    }

    while(!feof(arq)){
        c = fgetc(arq);
        str1[i] = c;
        i = i + 1;
    }

    fclose(arq);

    printf("%s \n", str1);

    i = 0;
    while(1) {
        c = str1[i];
        if (c=='a'){
            c = '*';
            str1[i] = c;
        }
        if (c=='e'){
            c = '*';
            str1[i] = c;
        }
        if (c=='i'){
            c = '*';
            str1[i] = c;
        }
        if (c=='o'){
            c = '*';
            str1[i] = c;
        }
        if (c=='u'){
            c = '*';
            str1[i] = c;
        }
        if (c=='\0'){
            break;
        }
        i = i + 1;
    }

    printf("%s \n", str1);

    FILE* arq2;
    arq2 = fopen("exe2.txt", "w+");
    if(arq2 == NULL){
        printf("Erro ao abrir o arquivo. \n");
        exit(1);
    }

    fprintf(arq2, "%s", str1);
    fclose(arq2);

    return 0;
}
 */

/*
 //===================================================
int fibonacci(int n){
    if(n ==1){
        return 0;
    } else if (n == 2){
        return 1;
    } else{
        return fibonacci(n-1) + fibonacci(n-2);
    }
}

int main(){

    int n;

    printf("Digite a posição:\n");
    scanf("%i", &n);

    printf("O termo: %i", fibonacci(n));

    return 0;
}
 */

/*
 //===================================================
float media(float *vetor, int tamanho, int contador ){
    if (contador == tamanho){
        return 0.0;
    }
    return media(vetor, tamanho, contador + 1) + vetor[contador] / tamanho;
}

int main (){

    int N=0;
    printf("Digite o numero do tamanho do vetor:\n");
    scanf("%i", &N);

    //float vetor[N];
    float *vetor;
    vetor = malloc(sizeof(float)*N);

    for (int i = 0; i < N; ++i) {
        printf("Digite o elemento [%i] do vetor: \n", i+1);
        scanf("%f", &vetor[i]);
    }

    int cont=0;
    float m = media(vetor, N, cont);
    printf("Media: %f", m);

    free(vetor);

    return 0;
}
 */

/*
 //===================================================
int main (){

   FILE* arq;
   arq = fopen("/home/scrim/Downloads/Lista de Exercícios 3-20191203/a123.txt", "r");
   char str[1000];
   char c;
   int contL=0;
   int contC=0;
   int comP=0;
   int contP=0;

   while(!feof(arq)){
       c = fgetc(arq);
       if (c == '\n'){
           contL = contL + 1;
       }
       if (c != ' ' && c != '\n') {
           contC = contC + 1;
       }
       if((c == ' ' || c == '\n')){
           contP = contP + 1;
       }
   }

   printf("Numero de caracteres: %i \n", contC);
   printf("Numero de linhas: %i \n", contL);
   printf("Numero de palavras: %i \n", contP);

    return 0;
}
 */
//===================================================


//EXEMPLO DE MATRIZ EM ARQUIVO
/*
int main (){

    int i, j, matriz[3][4];
    FILE *arq;
    arq = fopen("conteudo.txt", "r");
    if(arq == NULL){
        printf("Erro ao abrir o arquivo");
        exit(1);
    }
    for(i=0;i<3;i++){
        for(j=0;j<4;j++)
            fscanf(arq, "%d", &matriz[i][j]);
    }
    for(i=0;i<3;i++){
        for(j=0;j<4;j++)
            printf("%d ", matriz[i][j]);
        printf("\n");
    }
    fclose(arq);

    return 0;
}
 */
//===================================================
